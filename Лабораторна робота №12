from scipy import integrate
import math
eps = 0.001
def f1(x):
    return 1/math.sqrt(x+3)
def left_rec(f1,a,b,n):
    h=(b-a)/n
    sum=0
    for i in range(0,n):
        sum+=f1(a+i*h)
    return sum*h
v,err = integrate.quad(f1,0.4,1.2)
if abs(left_rec(f1,0.4,1.2,2*10) - left_rec(f1,0.4,1.2,10))/3. <=eps:
    print("Метод лівих прямокутників:",round (left_rec(f1,0.4,1.2,10), 5))
def right_rec(f1,a,b,n):
    h=(b-a)/n
    sum=0
    for i in range(1,n+1):
        sum+=f1(a+i*h)
    return sum*h
print("Метод правих прямокутників:",round (right_rec(f1,0.4,1.2,10), 5))
def aver_rec(f1,a,b,n):
    h=0.08
    sum=0
    for i in range(0,n):
        sum+=f1(a+i*h)
    return sum*h
print("Метод середніх прямокутників",round (aver_rec(f1,0.4,1.2,10), 5))
print("Перевірка для методу прямокутників= ",round (v, 5))

from scipy import integrate
import math
eps = 0.001
def f1(x):
    return (2*x+0.5)*math.sin(x)
def simpson(a,b,n):
    h = (b - a) / n
    integr = f1(a) + f1(b)
    for i in range(1,n):
        k = a + i*h
        if i%2 == 0:
            integr += 2 * f1(k)
        else:
            integr += 4 * f1(k)
    integr *= h/3
    return integr
if abs(simpson(0.4,1.2,2*8) -simpson(0.4,1.2,8))/ 15. <= eps:
    print("Метод Сімпсона:",round (simpson(0.4,1.2,8), 5))
v,err = integrate.quad(f1,0.4,1.2)
print("Перевірка метода Сімпсона= ",round(v, 5))

from scipy import integrate
import math
eps = 0.001
def f1(x):
    return 1/math.sqrt(0.5*x**2+1.5)
def trap(f1,a,b,n):
    h=(b-a)/n
    sum=0.5*(f1(a)+f1(b))
    for i in range(1,n):
        sum+=f1(a+i*h)
    return sum*h
v,err = integrate.quad(f1,1.2,2)
if abs (trap(f1, 1.2, 2, 2*20) -trap(f1, 1.2, 2, 20))/3. <= eps:
    print("Метод трапеції:",round (trap(f1,1.2,2,20), 5))
print("Перевірка метода трапеції= ",round(v, 5))
